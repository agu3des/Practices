== Objetivo ==
Alterar o c√≥digo do sistema acad√™mico visto em sala de aula para gerenciar disciplinas. Use como base o c√≥digo https://github.com/gugawag/js-academico-2023.2/releases/tag/v1-MVC

== Passos ==

Ponto de partida do seu c√≥digo, baseado no c√≥digo apresentado em sala: https://github.com/gugawag/js-academico-2023.2/releases/tag/v1-MVC
Agora √© sua vez de alterar o sistema banc√°rio. Precisamos gerenciar disciplinas. Para isso, voc√™ deve:


0. Baixar o c√≥digo acima e abrir o html no navegador para executar a aplica√ß√£o do jeito que deixamos em sala de aula. Pratique acrescentando alunos e vendo se funciona;

1. Altere o c√≥digo atual para inserir a l√≥gica de neg√≥cio: n√£o permitir inserir aluno menor de idade. Em qual camada deveria ter essa altera√ß√£o? ü§î  OK

2. Desenvolver a classe Disciplina, contendo como atributos: c√≥digo, nome e um array de alunos (da classe Aluno) e seus respectivos m√©todos get e set;

3. Desenvolver as classes do padr√£o MVC para Disciplina, assim como fizemos para Aluno: classes DisciplinaRepositorio, DisciplinaServico, DisciplinaControlador. Al√©m dos m√©todos de CRUD (inserir, pesquisar, atualizar e remover), similar a como foi feito com Aluno, voc√™ deve criar o m√©todo inserirAlunoNaDisciplina, que receber√° um aluno e o colocar√° no array de alunos da Disciplina.

4. Criar o html disciplina.html, que ter√° os inputs para inserir uma nova disciplina, e inserir√° as refer√™ncias para os arquivos .js necess√°rios.

== O que entregar? ==
1. prints: 
do c√≥digo seu index.html; 
da classe Disciplina; 
da classe AlunoService; 
das classes DisciplinaRepositorio, DisciplinaServico, DisciplinaControlador
do seu navegador com seu c√≥digo executando, com alguns alunos cadastrados
2. O link do github de seu projeto